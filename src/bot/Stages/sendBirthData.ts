import TelegramBot from 'node-telegram-bot-api';
import { IUserData } from './checkCompletedStage';

export const sendBirthData = async ({
  bot,
  chatId,
  userData,
}: {
  bot: TelegramBot;
  chatId: number;
  userData: Map<number, IUserData>;
}) => {
  await bot.sendMessage(chatId, '<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>', {
    parse_mode: 'HTML',
  });
  await bot.sendMessage(
    chatId,
    `–í—ã –≤–≤–µ–ª–∏ –¥–∞–Ω–Ω—ã–µ:\n\n\<b>üè∑ –ò–º—è:</b> ${userData.get(chatId).cardName}\n<b>üìÜ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> ${userData.get(chatId).birthDate}\n<b>‚è∞ –í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è:</b> ${userData.get(chatId).birthTime}\n<b>üåè–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> ${userData.get(chatId).birthPlace}`,
    { parse_mode: 'HTML' },
  );
  bot.sendMessage(chatId, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å', {
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            callback_data: 'accept_birth_data',
          },
        ],
        [
          {
            text: '–ò–∑–º–µ–Ω–∏—Ç—å',
            callback_data: 'update_birth_data',
          },
        ],
      ],
    },
  });
};
